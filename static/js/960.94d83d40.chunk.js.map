{"version":3,"file":"static/js/960.94d83d40.chunk.js","mappings":"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","sources":["components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","Pages/Home.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Table = styled.table`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 40px;\n`;\n\nexport const Thead = styled.thead`\n  width: 100px;\n  border-bottom-width: 1px;\n  position: sticky;\n  top: 4rem;\n  z-index: 10;\n  background-color: rgba(255, 255, 255, 1);\n  font-size: 18px;\n`;\n\nexport const TableRaw = styled.tr`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n`;\n\nexport const TableHor = styled.th`\n  padding: 12px 16px;\n  text-align: left;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  font-weight: 400;\n  font-size: 16px;\n  background-color: ${props => props.theme.colors.contactsList.bg};\n  color: ${props => props.theme.colors.header.text};\n\n  @media screen and (min-width: ${props => props.theme.media.m}) {\n    font-size: 18px;\n    font-weight: 500;\n  }\n`;\n\nexport const TotalContacts = styled.thead`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  font-size: 14px;\n\n  td {\n    padding-top: 14px;\n    padding-bottom: 14px;\n    font-weight: 500;\n    color: ${props => props.theme.colors.header.text};\n  }\n`;\n\nexport const TableRawContent = styled.tr`\n  position: relative;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${props => props.theme.colors.contactsList.hover};\n  }\n\n  @media screen and (min-width: ${props => props.theme.media.m}) {\n    &:hover {\n      .ButtonsWrapper {\n        display: block;\n      }\n    }\n  }\n`;\n\nexport const TableDataName = styled.td`\n  padding: 1px 10px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  font-size: 18px;\n\n  @media screen and (min-width: ${props => props.theme.media.m}) {\n    padding: 1px 16px;\n  }\n`;\n\nexport const Name = styled.span`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  line-height: 24px;\n  font-size: 16px;\n  color: ${props => props.theme.colors.header.text};\n\n  @media screen and (min-width: ${props => props.theme.media.m}) {\n    font-size: 18px;\n  }\n`;\n\nexport const TableDataNumber = styled.td`\n  padding: 1px 10px;\n  font-size: 18px;\n  line-height: 24px;\n  font-size: 14px;\n  color: ${props => props.theme.colors.header.text};\n\n  @media screen and (min-width: ${props => props.theme.media.m}) {\n    font-size: 18px;\n    padding: 1px 16px;\n  }\n`;\n\n// ====\nexport const ButtonsWrapper = styled.td`\n  display: none;\n  position: absolute;\n  top: 14px;\n  right: 8px;\n`;\n\nexport const EditBtn = styled.button`\n  padding: 4px 6px;\n  background: transparent;\n  margin-right: 10px;\n  border: none;\n  color: ${state => state.theme.colors.contactsList.hoveredBtnColor};\n  cursor: pointer;\n\n  &:hover {\n    color: rgba(0, 0, 0, 1);\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  padding: 4px 6px;\n  background: transparent;\n  border: none;\n  color: ${state => state.theme.colors.contactsList.hoveredBtnColor};\n  cursor: pointer;\n\n  &:hover {\n    color: rgba(0, 0, 0, 1);\n  }\n`;\n","import { MdDelete } from 'react-icons/md';\nimport { FiEdit } from 'react-icons/fi';\nimport {\n  Thead,\n  Table,\n  TableRaw,\n  TableHor,\n  TableDataName,\n  TableRawContent,\n  TableDataNumber,\n  DeleteBtn,\n  Name,\n  TotalContacts,\n  EditBtn,\n  ButtonsWrapper,\n} from './ContactsList.styled';\nimport Avatar from '@mui/material/Avatar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllContactsThunk, removeContact } from 'redux/contacts/thunk';\nimport {\n  selectTotalContacts,\n  selectFilteredByName,\n} from 'redux/contacts/selectors';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nfunction getRandomHexColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport const ContactList = ({ stateItem }) => {\n  const contactsAmount = useSelector(selectTotalContacts);\n  const filteredContacts = useSelector(selectFilteredByName);\n\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContactsThunk());\n  }, [dispatch]);\n\n  const handleContactDetailsClick = contactId => {\n    navigate(`contact/${contactId}`, { state: stateItem });\n  };\n\n  return (\n    <>\n      <Table>\n        <Thead>\n          <TableRaw>\n            <TableHor>Name</TableHor>\n            <TableHor>Phone Number</TableHor>\n          </TableRaw>\n        </Thead>\n        <TotalContacts>\n          <tr>\n            <td>CONTACTS ({contactsAmount})</td>\n          </tr>\n        </TotalContacts>\n        <tbody>\n          {filteredContacts.map(contact => {\n            const firstLetter = contact.name.slice(0, 1).toUpperCase();\n\n            const contactName = contact.name.charAt(0).toUpperCase();\n            const contactSliced = contact.name.slice(1);\n            const ContactNameCapital = contactName + contactSliced;\n\n            return (\n              <TableRawContent\n                key={contact.id}\n                onClick={() => handleContactDetailsClick(contact.id)}\n              >\n                <TableDataName>\n                  <Avatar\n                    sx={{\n                      bgcolor: getRandomHexColor(),\n                      width: 40,\n                      height: 40,\n                    }}\n                  >\n                    {firstLetter}\n                  </Avatar>\n                  <Name>{ContactNameCapital}</Name>\n                </TableDataName>\n\n                <TableDataNumber>{contact.number}</TableDataNumber>\n\n                <ButtonsWrapper className=\"ButtonsWrapper\">\n                  <EditBtn\n                    onClick={e => {\n                      e.stopPropagation();\n                      navigate(`contact/${contact.id}/edit`);\n                    }}\n                  >\n                    <FiEdit size={25} />\n                  </EditBtn>\n                  <DeleteBtn\n                    onClick={e => {\n                      e.stopPropagation();\n\n                      const isConfirmed = window.confirm('Delete contact?');\n                      if (isConfirmed) {\n                        dispatch(removeContact(contact.id));\n                      }\n                    }}\n                  >\n                    <MdDelete size={25} />\n                  </DeleteBtn>\n                </ButtonsWrapper>\n              </TableRawContent>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import { ContactList } from 'components/ContactsList/ContactsList';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ContactList stateItem={{ from: location }} />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["Table","styled","_templateObject","_taggedTemplateLiteral","Thead","_templateObject2","TableRaw","_templateObject3","TableHor","_templateObject4","props","theme","colors","contactsList","bg","header","text","media","m","TotalContacts","_templateObject5","TableRawContent","_templateObject6","hover","TableDataName","_templateObject7","Name","_templateObject8","TableDataNumber","_templateObject9","ButtonsWrapper","_templateObject10","EditBtn","_templateObject11","state","hoveredBtnColor","DeleteBtn","_templateObject12","getRandomHexColor","color","i","Math","floor","random","ContactList","_ref","stateItem","contactsAmount","useSelector","selectTotalContacts","filteredContacts","selectFilteredByName","navigate","useNavigate","dispatch","useDispatch","useEffect","getAllContactsThunk","_jsx","_Fragment","children","_jsxs","map","contact","firstLetter","name","slice","toUpperCase","ContactNameCapital","charAt","onClick","contactId","id","concat","Avatar","sx","bgcolor","width","height","number","className","e","stopPropagation","FiEdit","size","window","confirm","removeContact","MdDelete","location","useLocation","from"],"sourceRoot":""}