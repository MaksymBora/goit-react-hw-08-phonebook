{"version":3,"file":"static/js/668.b2414664.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.js","Pages/AddContacts/AddContacts.style.js","Pages/AddContacts/AddContacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 10px;\n  align-items: center;\n\n  div {\n    width: 100%;\n    color: ${props => props.theme.colors.editContact.text};\n\n    ::before {\n      border-color: ${props => props.theme.colors.editContact.formBorder};\n    }\n\n    ::after {\n      border-color: ${props => props.theme.colors.editContact.hoverBorder};\n    }\n  }\n\n  svg {\n    width: 28px;\n    height: 28px;\n    color: ${props => props.theme.colors.editContact.icons};\n  }\n\n  @media screen and (min-width: 767px) {\n    div > div {\n      width: 300px;\n    }\n\n    svg {\n      width: 36px;\n      height: 36px;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  font-weight: 500;\n  padding: 10px;\n\n  @media screen and (min-width: 767px) {\n    width: 500px;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: end;\n  gap: 10px;\n\n  label {\n    color: ${props => props.theme.colors.editContact.icons};\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 8px;\n  min-width: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 50%;\n  border: none;\n  background: transparent;\n  text-align: center;\n  color: ${props => props.theme.colors.addContact.icon};\n  cursor: pointer;\n\n  svg {\n    transition: transform 250ms ease-in-out, color 250ms ease-in-out;\n    &:hover {\n      color: ${props => props.theme.colors.addContact.hover};\n\n      transform: scale(1.08);\n    }\n\n    &:active {\n      color: ${props => props.theme.colors.addContact.hover};\n      transform: scale(1.08);\n    }\n  }\n`;\n","import { ErrorMessage, Field, Formik } from 'formik';\nimport { FiUserPlus } from 'react-icons/fi';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  Wrapper,\n  Button,\n  InputWrapper,\n} from './ContactsForm.styled';\nimport { PatternFormat } from 'react-number-format';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNewContact } from 'redux/contacts/thunk';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { TextField } from '@mui/material';\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\nimport PhoneEnabledIcon from '@mui/icons-material/PhoneEnabled';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\n\n// ====== Validation ========= //\nconst ContactsSchema = Yup.object().shape({\n  name: Yup.string().required('* Name is required'),\n  number: Yup.string().required('* Phone number is required'),\n});\n\nconst initialValues = { name: '', number: '' };\n\nexport const ContactsForm = () => {\n  const allcontacts = useSelector(selectContacts);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (allcontacts.find(contact => contact.name === values.name)) {\n      return alert(`${values.name} is already in contacts`);\n    }\n\n    if (allcontacts.find(contact => contact.number === values.number)) {\n      return alert(`${values.number} is already in contacts`);\n    }\n\n    dispatch(addNewContact({ ...values }));\n    navigate('/');\n\n    toast.success(\n      <div>\n        <b>{values.name}</b> added in phonebook\n      </div>,\n      {\n        duration: 4000,\n        icon: 'âœ…',\n      }\n    );\n    resetForm();\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={ContactsSchema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm autoComplete=\"off\">\n          <InputWrapper>\n            <PersonOutlineIcon />\n            <Field\n              as={TextField}\n              label=\"Name\"\n              name=\"name\"\n              multiline\n              variant=\"standard\"\n              className=\"fieldName\"\n            />\n          </InputWrapper>\n          <ErrorMessage name=\"name\" component=\"span\" style={{ color: 'red' }} />\n\n          <InputWrapper>\n            <PhoneEnabledIcon />\n            <Field\n              as={PatternFormat}\n              customInput={TextField}\n              name=\"number\"\n              variant=\"standard\"\n              format=\"+38 (0##) ### ## ##\"\n              allowEmptyFormatting={true}\n              mask=\"_\"\n            />\n          </InputWrapper>\n          <ErrorMessage\n            name=\"number\"\n            component=\"span\"\n            style={{ color: 'red' }}\n          />\n\n          <Button type=\"submit\">\n            <FiUserPlus size={26} />\n          </Button>\n        </StyledForm>\n      </Formik>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding-top: 40px;\n  font-size: 12px;\n\n  h2 {\n    margin-bottom: 20px;\n    color: ${props => props.theme.colors.addContact.text};\n  }\n\n  @media screen and (min-width: 767px) {\n    font-size: 14px;\n  }\n`;\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  gap: 35px;\n\n  @media screen and (min-width: 767px) {\n    gap: 135px;\n  }\n`;\n\nexport const BackBtn = styled(Link)`\n  color: ${props => props.theme.colors.header.text};\n  transition: color 250ms ease-in-out;\n\n  &:hover {\n    color: #47a76a;\n  }\n\n  &:active {\n    color: #47a76a;\n  }\n`;\n","import { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { Wrapper, AvatarWrapper, BackBtn } from './AddContacts.style';\nimport { TbArrowBackUp } from 'react-icons/tb';\n\nconst AddContacts = () => {\n  return (\n    <Wrapper>\n      <h2>Create Contact</h2>\n      <AvatarWrapper>\n        <BackBtn to=\"/\">\n          <TbArrowBackUp size={'30px'} />\n        </BackBtn>\n        <AccountCircleIcon sx={{ fontSize: '210px', color: '#e5e5e5' }} />\n      </AvatarWrapper>\n      <hr />\n      <ContactsForm />\n    </Wrapper>\n  );\n};\n\nexport default AddContacts;\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","props","theme","colors","editContact","text","formBorder","hoverBorder","icons","Wrapper","_templateObject2","InputWrapper","_templateObject3","Button","_templateObject4","addContact","icon","hover","ContactsSchema","Yup","shape","name","required","number","initialValues","ContactsForm","allcontacts","useSelector","selectContacts","navigate","useNavigate","dispatch","useDispatch","_jsx","children","Formik","validationSchema","onSubmit","values","_ref","resetForm","find","contact","alert","concat","addNewContact","_objectSpread","toast","_jsxs","duration","autoComplete","PersonOutlineIcon","Field","as","TextField","label","multiline","variant","className","ErrorMessage","component","style","color","PhoneEnabledIcon","PatternFormat","customInput","format","allowEmptyFormatting","mask","type","FiUserPlus","size","AvatarWrapper","BackBtn","Link","header","to","TbArrowBackUp","AccountCircleIcon","sx","fontSize"],"sourceRoot":""}